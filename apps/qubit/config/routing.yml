# You can find more information about this file on the symfony website:
# http://www.symfony-project.org/reference/1_4/en/10-Routing

homepage:
  url: /
  class: QubitResourceRoute
  param:
    module: staticpage
    action: home
    slug: home

# --------------------------------------------------------- <QubitMetadataRoute>
# QubitMetadataRoute objects will generate and match URL to integrate the
# multiple metadata standards available.

slug;template:
  url: /:slug;:template
  class: QubitMetadataRoute
  param:
    action: index
    slug: { pattern: '[^;]+' }

slug:
  url: /:slug
  class: QubitMetadataRoute
  param:
    action: index

edit:
  url: /:slug/edit
  class: QubitMetadataRoute
  param:
    action: edit

copy:
  url: /:module/copy
  class: QubitMetadataRoute
  param:
    action: edit

add:
  url: /:module/add
  class: QubitMetadataRoute
  param:
    action: edit

# -------------------------------------------------------- </QubitMetadataRoute>

informationobject/action:
  url: /:slug/:action
  class: QubitResourceRoute
  param:
    module: informationobject
    action: { pattern: 'addDigitalObject|fileList|multiFileUpload|reports' }

oai:
  url: /;oai
  param:
    module: arOaiPlugin
    action: index

# Hack for Binder
# Archivematica is sending us either:
# - "tr:SLUG" where SLUG is a slug of an existing technology record
# - "ar:TMS_OBJECT_ID" where TMS_OBJECT_ID is the Id of an existing TMS object
sword/deposit/slug:
  url: /sword/deposit/:slug
  param:
    module: qtSwordPlugin
    action: deposit

sword:
  url: /sword/:action
  param:
    module: qtSwordPlugin

# ------------------------------------------------------------------------------

slug;default_index:
  url:   /:slug;:module
  class: QubitResourceRoute
  param:
    action: index

slug/default:
  url: /:slug/:module/:action
  class: QubitResourceRoute

id/default:
  url: /:module/:action/id/:id
  class: QubitRoute

default_index:
  url: /:module
  param:
    action: index

default:
  url: /:module/:action
