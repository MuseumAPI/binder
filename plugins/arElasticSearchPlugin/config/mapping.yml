# Mapping types
# http://www.elasticsearch.org/guide/reference/mapping/
mapping:

  # Special attributes (_attributes):
  # - i18n: the i18n fields will be added automatically (it is optional)
  # - i18nExtra: to inherit i18n fields from other table
  # - autocompleteFields: a list of fields that will be analyzed with edgengram
  # - rawFields: a list of i18n fields that will include an untouched version (not_analyzed)
  # - timestamp: adds created_at and updated_at properties
  #Â - nested_only: the type will be ignored but embedded within other objects

  # Other notes:
  # - Field names are camelized
  # - Objects can be embedded using _foreign_types
  # - Objects can be embedded using _patial_foreign_types, specifying properties and i18n fields
  # - The other matters, embedded types must be defined first

  #
  # Nested only (they are not considered types)
  #

  contact_information:
    _attributes: { i18n: true, i18nExtra: actor, timestamp: true, nested_only: true }
    dynamic: strict
    properties:
      contact_person: { type: string, index: not_analyzed }
      street_address: { type: string, index: no }
      postal_code: { type: string, include_in_all: false }
      country_code: { type: string, index: not_analyzed, include_in_all: false }
      location: { type: geo_point }

  other_name:
    _attributes:
      i18n: true
      nested_only: true
    dynamic: strict

  note:
    _attributes:
      i18n: true
      nested_only: true
    dynamic: strict

  event:
    _attributes:
      i18n: true
      nested_only: true
    dynamic: strict
    properties:
      start_date: { type: date, include_in_all: false }
      end_date: { type: date, include_in_all: false }
      start_date_string: { type: string, index: not_analyzed }
      end_date_string: { type: string, index: not_analyzed }
      type_id: { type: integer, index: not_analyzed, include_in_all: false }
      actor_id: { type: integer, index: not_analyzed, include_in_all: false }

  donor:
    _attributes:
      i18nExtra: actor
      nested_only: true
    _foreign_types: { contact_informations: contact_information }
    dynamic: true
    properties:
      slug: { type: string, index: not_analyzed }

  mediainfo_track:
    _attributes:
      nested_only: true
    dynamic: strict
    properties:
      count: { type: integer, index: not_analyzed, include_in_all: false }
      video_format_list: { type: string, index: not_analyzed, include_in_all: false }
      video_format_with_hint_list: { type: string, index: not_analyzed, include_in_all: false }
      codecs_video: { type: string, index: not_analyzed, include_in_all: false }
      video_language_list: { type: string, index: not_analyzed, include_in_all: false }
      audio_format_list: { type: string, index: not_analyzed, include_in_all: false }
      audio_format_with_hint_list: { type: string, index: not_analyzed, include_in_all: false }
      audio_codecs: { type: string, index: not_analyzed, include_in_all: false }
      audio_language_list: { type: string, index: not_analyzed, include_in_all: false }
      complete_name: { type: string, index: not_analyzed, include_in_all: false }
      file_name: { type: string, index: not_analyzed, include_in_all: false }
      file_extension: { type: string, index: not_analyzed, include_in_all: false }
      format: { type: string, index: not_analyzed, include_in_all: false }
      format_info: { type: string, index: not_analyzed, include_in_all: false }
      format_url: { type: string, index: not_analyzed, include_in_all: false }
      format_profile: { type: string, index: not_analyzed, include_in_all: false }
      format_settings: { type: string, index: not_analyzed, include_in_all: false }
      format_settings_cabac: { type: string, index: not_analyzed, include_in_all: false }
      format_settings_re_frames: { type: integer, index: not_analyzed, include_in_all: false }
      format_settings_gop: { type: string, index: not_analyzed, include_in_all: false }
      format_extensions_usually_used: { type: string, index: not_analyzed, include_in_all: false }
      commercial_name: { type: string, index: not_analyzed, include_in_all: false }
      internet_media_type: { type: string, index: not_analyzed, include_in_all: false }
      codec_id: { type: string, index: not_analyzed, include_in_all: false }
      codec_id_info: { type: string, index: not_analyzed, include_in_all: false }
      codec_id_url: { type: string, index: not_analyzed, include_in_all: false }
      codec: { type: string, index: not_analyzed, include_in_all: false }
      codec_family: { type: string, index: not_analyzed, include_in_all: false }
      codec_info: { type: string, index: not_analyzed, include_in_all: false }
      codec_url: { type: string, index: not_analyzed, include_in_all: false }
      codec_cc: { type: string, index: not_analyzed, include_in_all: false }
      codec_profile: { type: string, index: not_analyzed, include_in_all: false }
      codec_settings: { type: string, index: not_analyzed, include_in_all: false }
      codec_settings_cabac: { type: string, index: not_analyzed, include_in_all: false }
      codec_settings_ref_frames: { type: integer, index: not_analyzed, include_in_all: false }
      codec_extensions_usually_used: { type: string, index: not_analyzed, include_in_all: false }
      file_size: { type: long, index: not_analyzed, include_in_all: false }
      duration: { type: integer, index: not_analyzed, include_in_all: false }
      bit_rate: { type: integer, index: not_analyzed, include_in_all: false }
      bit_rate_mode: { type: string, index: not_analyzed, include_in_all: false }
      overall_bit_rate: { type: integer, index: not_analyzed, include_in_all: false }
      channels: { type: integer, index: not_analyzed, include_in_all: false }
      channel_positions: { type: string, index: not_analyzed, include_in_all: false }
      sampling_rate: { type: integer, index: not_analyzed, include_in_all: false }
      samples_count: { type: integer, index: not_analyzed, include_in_all: false }
      compression_mode: { type: string, index: not_analyzed, include_in_all: false }
      width: { type: integer, index: not_analyzed, include_in_all: false }
      height: { type: integer, index: not_analyzed, include_in_all: false }
      pixel_aspect_ratio: { type: float, index: not_analyzed, include_in_all: false }
      display_aspect_ratio: { type: string, index: not_analyzed, include_in_all: false }
      rotation: { type: float, index: not_analyzed, include_in_all: false }
      frame_rate_mode: { type: string, index: not_analyzed, include_in_all: false }
      frame_rate: { type: float, index: not_analyzed, include_in_all: false }
      frame_count: { type: integer, index: not_analyzed, include_in_all: false }
      resolution: { type: integer, index: not_analyzed, include_in_all: false }
      colorimetry: { type: string, index: not_analyzed, include_in_all: false }
      color_space: { type: string, index: not_analyzed, include_in_all: false }
      chroma_subsampling: { type: string, index: not_analyzed, include_in_all: false }
      bit_depth: { type: integer, index: not_analyzed, include_in_all: false }
      scan_type: { type: string, index: not_analyzed, include_in_all: false }
      interlacement: { type: string, index: not_analyzed, include_in_all: false }
      bits_pixel_frame: { type: float, index: not_analyzed, include_in_all: false }
      stream_size: { type: long, index: not_analyzed, include_in_all: false }
      proportion_of_this_stream: { type: float, index: not_analyzed, include_in_all: false }
      header_size: { type: long, index: not_analyzed, include_in_all: false }
      data_size: { type: long, index: not_analyzed, include_in_all: false }
      footer_size: { type: long, index: not_analyzed, include_in_all: false }
      language: { type: string, index: not_analyzed, include_in_all: false }
      color_primaries: { type: string, index: not_analyzed, include_in_all: false }
      transfer_characteristics: { type: string, index: not_analyzed, include_in_all: false }
      matrix_coefficients: { type: string, index: not_analyzed, include_in_all: false }
      is_streamable: { type: boolean, index: not_analyzed, include_in_all: false }
      writing_application: { type: string, index: not_analyzed, include_in_all: false }
      file_last_modification_date: { type: date, index: not_analyzed, include_in_all: false }
      file_last_modification_date_local: { type: date, index: not_analyzed, include_in_all: false }

  mediainfo:
    _attributes:
      nested_only: true
    _foreign_types:
      general_tracks: mediainfo_track
      video_tracks: mediainfo_track
      audio_tracks: mediainfo_track

  mets_data:
    _attributes:
      nested_only: true
    _foreign_types:
      mediainfo: mediainfo
    dynamic: strict
    properties:
      puid: { type: string, index: not_analyzed, include_in_all: false }
      filename: { type: string, index: not_analyzed, include_in_all: false }
      last_modified: { type: date, index: not_analyzed, include_in_all: false }
      date_ingested: { type: date, index: not_analyzed, include_in_all: false }
      size: { type: long, index: not_analyzed, include_in_all: false }
      mime_type: { type: string, index: not_analyzed, include_in_all: false }
      audio:
        type: object
        properties:
          bit_depth: { type: integer, index: not_analyzed, include_in_all: false }
          sample_rate: { type: string, index: not_analyzed, include_in_all: false }
          channels: { type: integer, index: not_analyzed, include_in_all: false }
          data_encoding: { type: string, index: not_analyzed, include_in_all: false }
          offset: { type: integer, index: not_analyzed, include_in_all: false }
          byte_order: { type: string, index: not_analyzed, include_in_all: false }
      document:
        type: object
        properties:
          title: { type: string, index: not_analyzed, include_in_all: false }
          author: { type: string, index: not_analyzed, include_in_all: false }
          page_count: { type: integer, index: not_analyzed, include_in_all: false }
          word_count: { type: integer, index: not_analyzed, include_in_all: false }
          character_count: { type: integer, index: not_analyzed, include_in_all: false }
          language: { type: string, index: not_analyzed, include_in_all: false }
          is_protected: { type: boolean, index: not_analyzed, include_in_all: false }
          is_rights_managed: { type: boolean, index: not_analyzed, include_in_all: false }
          is_tagged: { type: boolean, index: not_analyzed, include_in_all: false }
          has_outline: { type: boolean, index: not_analyzed, include_in_all: false }
          has_annotations: { type: boolean, index: not_analyzed, include_in_all: false }
          has_forms: { type: boolean, index: not_analyzed, include_in_all: false }
      text:
        type: object
        properties:
          linebreak: { type: string, index: not_analyzed, include_in_all: false }
          charset: { type: string, index: not_analyzed, include_in_all: false }
          markup_basis: { type: string, index: not_analyzed, include_in_all: false }
          markup_basis_version: { type: string, index: not_analyzed, include_in_all: false }
          markup_language: { type: string, index: not_analyzed, include_in_all: false }
      format_identification_event:
        type: object
        properties:
          type: { type: string, index: not_analyzed, include_in_all: false }
          dateTime: { type: date, index: not_analyzed, include_in_all: false }
          detail: { type: string, index: not_analyzed, include_in_all: false }
          outcome: { type: string, index: not_analyzed, include_in_all: false }
          outcomeDetailNote: { type: string, index: not_analyzed, include_in_all: false }
          linkingAgentIdentifier:
            type: object
            properties:
              type: { type: string, index: not_analyzed, include_in_all: false }
              value: { type: string, index: not_analyzed, include_in_all: false }
      other_events:
        type: object
        properties:
          type: { type: string, index: not_analyzed, include_in_all: false }
          dateTime: { type: date, index: not_analyzed, include_in_all: false }
          detail: { type: string, index: not_analyzed, include_in_all: false }
          outcome: { type: string, index: not_analyzed, include_in_all: false }
          outcomeDetailNote: { type: string, index: not_analyzed, include_in_all: false }
          linkingAgentIdentifier:
            type: object
            properties:
              type: { type: string, index: not_analyzed, include_in_all: false }
              value: { type: string, index: not_analyzed, include_in_all: false }
      agents:
        type: object
        properties:
          identifier_type: { type: string, index: not_analyzed, include_in_all: false }
          identifier_value: { type: string, index: not_analyzed, include_in_all: false }
          name: { type: string, index: not_analyzed, include_in_all: false }
          type: { type: string, index: not_analyzed, include_in_all: false }
      format:
        type: object
        properties:
          name: { type: string, index: not_analyzed, include_in_all: false }
          version: { type: string, index: not_analyzed, include_in_all: false }
          registry_name: { type: string, index: not_analyzed, include_in_all: false }
          registry_key: { type: string, index: not_analyzed, include_in_all: false }

  tms_object:
    _attributes:
      nested_only: true
    _foreign_types:
      classification: term
      department: term
    dynamic: strict
    properties:
      collection_date: { type: date, index: not_analyzed, include_in_all: false }
      collection_year: { type: string, index: not_analyzed, include_in_all: false }
      accession_number: { type: string, index: not_analyzed, include_in_all: false }
      full_image: { type: string, index: not_analyzed, include_in_all: false }
      thumbnail: { type: string, index: not_analyzed, include_in_all: false }
      date_collected: { type: date, index: not_analyzed, include_in_all: false }
      year_collected: { type: string, index: not_analyzed, include_in_all: false }
      date_created: { type: date, index: not_analyzed, include_in_all: false }

  tms_component:
    _attributes:
      nested_only: true
    _foreign_types:
      type: term
      install_comments: note
      prep_comments: note
      storage_comments: note
      text_entries: note
    _partial_foreign_types:
      artwork:
        _i18nFields: [title]
        dynamic: strict
        properties:
          thumbnail: { type: string, index: not_analyzed, include_in_all: false }
          departmentName: { type: string, index: not_analyzed, include_in_all: false }
          artist: { type: string, index: not_analyzed, include_in_all: false }
    dynamic: strict
    properties:
      comp_count: { type: integer, index: not_analyzed, include_in_all: false }
      component_number: { type: string, index: not_analyzed, include_in_all: false }
      status: { type: string, index: not_analyzed, include_in_all: false }
      media_format: { type: string, index: not_analyzed, include_in_all: false }

  #
  # Main types
  #

  aip:
    _partial_foreign_types:
      part_of:
        _i18nFields: [title]
        dynamic: strict
        properties:
          levelOfDescriptionId: { type: integer, index: not_analyzed, include_in_all: false }
          year_collected: { type: string, index: not_analyzed, include_in_all: false }
          department:
            type: object
            properties:
              id: { type: integer, index: not_analyzed, include_in_all: false }
              name: { type: string, index: not_analyzed, include_in_all: false }
    _foreign_types:
      type: term
      digital_objects: information_object
    dynamic: true
    properties:
      uuid: { type: string, index: not_analyzed, include_in_all: false }
      filename:
        type: string
        fields:
          autocomplete:
            include_in_all: false
            index_analyzer: autocomplete
            store: true
            search_analyzer: standard
            term_vector: with_positions_offsets
            type: string
      size_on_disk: { type: long, index: not_analyzed, include_in_all: false }
      digital_object_count: { type: integer, index: not_analyzed, include_in_all: false }
      created_at: { type: date, index: not_analyzed, include_in_all: false }
      ingestion_user: { type: string, index: not_analyzed, include_in_all: false }
      attached_to: { type: string, index: not_analyzed, include_in_all: false }

  term:
    _attributes:
      i18n: true
      timestamp: true
      autocompleteFields: [name]
      rawFields:  [name]
    _foreign_types: { use_for: other_name, scope_notes: note }
    dynamic: strict
    properties:
      slug: { type: string, index: not_analyzed }
      taxonomy_id: { type: integer, index: not_analyzed, include_in_all: false }
      is_protected: { type: boolean, index: not_analyzed, include_in_all: false }
      number_of_descendants: { type: integer, index: not_analyzed, include_in_all: false }

  accession:
    _attributes: { i18n: true, timestamp: true }
    _foreign_types: { donors: donor, creators: actor }
    dynamic: strict
    properties:
      slug: { type: string, index: not_analyzed }
      identifier: { type: string, index: not_analyzed }

  actor:
    _attributes:
      i18n: true
      timestamp: true
      autocompleteFields: [authorizedFormOfName]
      rawFields:  [authorizedFormOfName]
    dynamic: strict
    properties:
      slug: { type: string, index: not_analyzed }
      entity_type_id: { type: integer, index: not_analyzed, include_in_all: false }

  repository:
    _attributes:
      i18n: true
      i18nExtra: actor
      timestamp: true
      autocompleteFields: [authorizedFormOfName]
      rawFields:  [authorizedFormOfName]
    _foreign_types:
      contact_informations: contact_information
      other_names: other_name
      parallel_names: other_name
    dynamic: strict
    properties:
      slug: { type: string, index: not_analyzed }
      identifier: { type: string, index: not_analyzed }
      types: { type: integer, index: not_analyzed, include_in_all: false }

  information_object:
    _attributes:
      i18n: true
      timestamp: true
      autocompleteFields: [title]
      rawFields:  [title]
    _foreign_types:
      repository: repository
      names: actor
      creators: actor
      subjects: term
      places: term
      dates: event
      aips: aip
      mets_data: mets_data
      tms_object: tms_object
      tms_component: tms_component
      tms_child_components: information_object
    dynamic: true
    properties:
      slug: { type: string, index: not_analyzed }
      identifier: { type: string, index: not_analyzed }
      collection_root_id: { type: integer, index: not_analyzed }
      level_of_description_id: { type: integer, index: not_analyzed }
      publication_status_id: { type: integer, index: not_analyzed }
      parent_id: { type: integer, index: not_analyzed, include_in_all: false }
      ancestors: { type: integer, index: not_analyzed, include_in_all: false }
      children: { type: integer, index: not_analyzed, include_in_all: false }
      copyright_status_id: { type: integer, index: not_analyzed, include_in_all: false }
      material_type_id: { type: integer, index: not_analyzed, include_in_all: false }
      transcript: { type: string, index: analyzed, include_in_all: true }
      direct_subjects: { type: integer, index: not_analyzed, include_in_all: false }
      direct_places: { type: integer, index: not_analyzed, include_in_all: false }
      has_digital_object: { type: boolean, index: not_analyzed, include_in_all: false }
      original_relative_path_within_aip: { type: string, index: not_analyzed, include_in_all: false }
      digital_object:
        type: object
        properties:
          media_type_id: { type: integer, index: not_analyzed, include_in_all: false }
          usage_id: { type: integer, index: not_analyzed, include_in_all: false }
          byte_size: { type: integer, index: not_analyzed, include_in_all: false }
          mime_type: { type: string, index: not_analyzed, include_in_all: false }
          thumbnail_path: { type: string, index: not_analyzed }
          checksum: { type: string, index: not_analyzed, include_in_all: false }
      alternative_identifiers:
        type: object
        properties:
          label: { type: string, index: not_analyzed }
          identifier: { type: string, index: not_analyzed }
      inherit_reference_code:
        type: string
        fields:
          autocomplete:
            include_in_all: false
            index_analyzer: autocomplete
            store: true
            search_analyzer: standard
            term_vector: with_positions_offsets
            type: string
      # TODO: Wrap this fields in part_of_aip object
      aip_uuid: { type: string, index: not_analyzed, include_in_all: false }
      aip_name: { type: string, index: not_analyzed, include_in_all: false }
      aip_part_of: { type: string, index: not_analyzed, include_in_all: false }
      aip_part_of_department_name: { type: string, index: not_analyzed, include_in_all: false }
      aip_attached_to: { type: string, index: not_analyzed, include_in_all: false }
      # Used only for Binder / Supporting technologies
      inherited_title:
        type: string
        fields:
          autocomplete:
            type: string
            include_in_all: false
            index_analyzer: autocomplete
            store: true
            search_analyzer: standard
            term_vector: with_positions_offsets
            type: string

  saved_query:
    _attributes:
      timestamp: true
    dynamic: strict
    properties:
      name:
        type: string
        fields:
          autocomplete:
            include_in_all: false
            index_analyzer: autocomplete
            store: true
            search_analyzer: standard
            term_vector: with_positions_offsets
            type: string
      description: { type: string, index: not_analyzed, include_in_all: false }
      type_id: { type: integer, index: not_analyzed, include_in_all: false }
      scope: { type: string, index: not_analyzed, include_in_all: false }
      params: { type: string, index: not_analyzed, include_in_all: false }
      slug: { type: string, index: not_analyzed, include_in_all: false }
      user:
        type: object
        properties:
          id: { type: integer, index: not_analyzed, include_in_all: false }
          name: { type: string, index: not_analyzed, include_in_all: false }

  fixity_report:
    dynamic: strict
    properties:
      success: { type: boolean, index: not_analyzed, include_in_all: false }
      message: { type: string, index: not_analyzed, include_in_all: false }
      time_started: { type: date, index: not_analyzed, include_in_all: false }
      time_completed: { type: date, index: not_analyzed, include_in_all: false }
      session_uuid: { type: string, index: not_analyzed, include_in_all: false }
      aip:
        type: object
        properties:
          id: { type: integer, index: not_analyzed, include_in_all: false }
          uuid: { type: string, index: not_analyzed, include_in_all: false }
          name: { type: string, index: not_analyzed, include_in_all: false }
          partOf: { type: string, index: not_analyzed, include_in_all: false }
          attachedTo: { type: string, index: not_analyzed, include_in_all: false }
      failures:
        type: object
        properties:
          type: { type: string, index: not_analyzed, include_in_all: false }
          path: { type: string, index: not_analyzed, include_in_all: false }
          hash_type: { type: string, index: not_analyzed, include_in_all: false }
          expected_hash: { type: string, index: not_analyzed, include_in_all: false }
          actual_hash: { type: string, index: not_analyzed, include_in_all: false }
          message: { type: string, index: not_analyzed, include_in_all: false }
